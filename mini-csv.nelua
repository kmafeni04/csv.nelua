require "io"

global csv = @record{}

function csv.parse(file: string, delim: facultative(string), header: boolean)
  local tbl: sequence(hashmap(string, string))

  local content = io.open(file)
  if not content:isopen() then
    error(("Failed to open file: %s"):format(file))
  end
  ## if delim.type.is_niltype then
    local actual_delim = ","
  ## else
    local actual_delim = delim
  ## end

  local headers: sequence(string)
  local line_no = 1
  for line in content:lines() do
    local col_no = 1
    if header then
      if line_no == 1 then
        for col in line:gmatch(("[^%s]+"):format(actual_delim)) do
          headers:push(col)
        end
      end
    end
    for col in line:gmatch(("[^%s]+"):format(actual_delim)) do
      local row: hashmap(string, string)
      if header then
        if line_no ~= 1 then
          row[headers[col_no]] = col
          tbl:push(row)
        end
      else
        row["column " .. col_no] = col
        tbl:push(row)
      end
      col_no = col_no + 1
    end
    line_no = line_no + 1
  end
  return tbl
end

local tbl = csv.parse("test-files/simple.csv", nil, false)
for _, row in ipairs(tbl) do
  if row:has("Name") then
    print("Name: " .. row["Name"])
  end
end
